<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	https://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/beans 
	https://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	https://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://mybatis.org/schema/mybatis-spring
	http://mybatis.org/schema/mybatis-spring-1.2.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<context:component-scan base-package="com.achu.common" />
	<context:component-scan base-package="com.achu.dao" />
	<context:component-scan base-package="com.achu.dto" />
	<context:component-scan base-package="com.achu.service" />
	
	<!-- 해당 패키지 하위의 클래스를 검색해 매퍼.xml과 비교해서 맞는 것끼리 sqlSession.getMapper(매퍼.class)를 빈으로 등록해줍니다. -->
	<mybatis-spring:scan base-package="com.achu.mapper"/>
	
	<!-- db컨넥션 풀 bean 설정 -->
	 <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<!-- <property name="url" value="jdbc:log4jdbc:oracle:thin:@JCLASS10:1521:achu" 
			/> <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> -->
		<property name="url" value="jdbc:oracle:thin:@JCLASS10:1521:xe" />
		<property name="username" value="achu" />
		<property name="password" value="1234" />
	</bean> 
	<!-- mysql -->
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/achu" />
		<property name="username" value="dlaa" />
		<property name="password" value="1234" />
	</bean> -->
	
	<!-- SqlSession: SQL 실행 및 트랜잭션 제어를 위한 API를 제공. ☆★중요★☆ -->
	<!-- SqlSessionFactory : SqlSession을 생성하는 구성 요소 -->
	<!--  mybatis-spring은 위의 요소들을 bean으로 처리 가능하게 하는 프레임워크  -->
	<!-- SqlSessionFactoryBean: SqlSessionFactory를 작성하고 Spring DI 컨테이너에 개체를 저장.-->
	
	<!-- mybatis-spring연동 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml" />
	</bean>	
	
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"/>	
		<property name="maxUploadSize" value="100240000"/>	
		<property name="maxUploadSizePerFile" value="100240000"/>	
		<property name="maxInMemorySize" value="100240000"/>	
		<property name="uploadTempDir" value="file:\\d:\\achu\\upload\\temp"/>	
	</bean> -->
	
</beans>
